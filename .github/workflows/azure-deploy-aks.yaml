name: Build and deploy microservices to AKS

on:
  push:
    branches: [main, Development]
  pull_request:
    branches: [main, Development]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  RESOURCE_GROUP: "InstantaneousGram"
  CLUSTER_NAME: "InstantKluster"
  NAMESPACE: "instantaneousgram"

jobs:
  buildAndDeploy:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service:
          - InstantaneousGram-Authentication
          - InstantaneousGram-ContentManagement
          - InstantaneousGram-ImageAndVideoProcessing
          - InstantaneousGram-LikeAndComment
          - InstantaneousGram-UserProfile
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up appsettings and .env
        run: |
          echo '${{ secrets.APPSETTINGS_JSON }}' > ./${{ matrix.service }}/appsettings.json
          if [ "${{ matrix.service }}" == "imageandvideoprocessing" ]; then
            echo '${{ secrets.CLOUDINARY_URL }}' > ./${{ matrix.service }}/.env
          fi

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push image to Docker Hub
        run: |
          LOWERCASE_SERVICE=$(echo "${{ matrix.service }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/${LOWERCASE_SERVICE}:${{ github.sha }}
          docker build -t $IMAGE_NAME ./${{ matrix.service }}
          docker push $IMAGE_NAME

      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Set lowercase service name
        run: echo "LOWERCASE_SERVICE=$(echo '${{ matrix.service }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ./Kubernetes/${{ env.LOWERCASE_SERVICE }}.yaml
          namespace: ${{ env.NAMESPACE }}
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.LOWERCASE_SERVICE }}:${{ github.sha }}
