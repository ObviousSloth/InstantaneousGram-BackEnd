name: CI/CD Workflow

on:
  push:
    branches: [ main, Development]
  pull_request:
    branches: [ main, Development]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        microservice: 
          - InstantaneousGram-Authentication
          - InstantaneousGram-UserProfile
          - InstantaneousGram-ApiGateway
          - InstantaneousGram-ContentManagement
          - InstantaneousGram-ImageAndVideoProcessing
          - InstantaneousGram-LikeAndComment

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0  # adjust this to your .NET Core version

      - name: Cache .NET packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install dependencies
        run: dotnet restore ${{ matrix.microservice }}

      - name: Build
        run: dotnet build ${{ matrix.microservice }} --configuration Release --no-restore

      - name: Test
        run: dotnet test ${{ matrix.microservice }} --no-restore --verbosity normal

  buildDockerImage:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }}" > ./InstantaneousGram-ImageAndVideoProcessing/.env

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build and Push
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

  release:
    needs: buildDockerImage
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Docker Compose File
        uses: actions/upload-artifact@v3
        with:
          name: docker-compose
          path: docker-compose.yml