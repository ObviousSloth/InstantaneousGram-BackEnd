name: Build and deploy InstantaneousGram microservices to AKS

on:
  push:
    branches: ["main", "Development"]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "instantaneousgramcontainerreg"
  CONTAINER_NAME: "instantaneousgram"
  RESOURCE_GROUP: "InstantaneousGram"
  CLUSTER_NAME: "InstantKluster"
  DOCKER_COMPOSE_FILE_PATH: "./docker-compose.yml"

jobs:
  buildAndPushImages:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: apigateway
            dockerfile: InstantaneousGram-ApiGateway/Dockerfile
            context: InstantaneousGram-ApiGateway
          - name: authentication
            dockerfile: InstantaneousGram-Authentication/Dockerfile
            context: InstantaneousGram-Authentication
          - name: contentmanagement
            dockerfile: InstantaneousGram-ContentManagement/Dockerfile
            context: InstantaneousGram-ContentManagement
          - name: likeandcomment
            dockerfile: InstantaneousGram-LikeAndComment/Dockerfile
            context: InstantaneousGram-LikeAndComment
          - name: imageandvideoprocessing
            dockerfile: InstantaneousGram-ImageAndVideoProcessing/Dockerfile
            context: InstantaneousGram-ImageAndVideoProcessing
            needs_env: true
          - name: userprofile
            dockerfile: InstantaneousGram-UserProfile/Dockerfile
            context: InstantaneousGram-UserProfile
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4
      
      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Create the shared appsettings files
      - name: Set up shared appsettings files
        run: |
          echo "${{ secrets.APPSETTINGS_JSON }}" | jq '.' > ${{ matrix.service.context }}/appsettings.json
  

      # Conditionally create the .env file for the image processing service
      - name: Set up .env file for image processing
        if: ${{ matrix.service.needs_env }} 
        run: |
          echo -e "${{ secrets.CLOUDINARY_URL }}" > ${{ matrix.service.context }}/.env

      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/instantaneousgram-${{ matrix.service.name }}:latest --registry ${{ env.AZURE_CONTAINER_REGISTRY }} --file ${{ matrix.service.dockerfile }} ${{ matrix.service.context }}

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    needs: buildAndPushImages
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4
      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Ensure the .env file exists before running kompose
      - name: Ensure .env file exists for image processing
        if: ${{ matrix.service.needs_env }} 
        run: |
          if [ ! -f ${{ matrix.service.context }}/.env ]; then
            echo "Creating .env file for image processing"
            echo -e "${{ secrets.ENV_IMAGEPROCESSING }}" > ${{ matrix.service.context }}/.env
          fi
      # Runs Kompose to create manifest files    
      - name: Bake deployment
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "kompose"
          dockerComposeFile: ${{ env.DOCKER_COMPOSE_FILE_PATH }}
          kompose-version: "latest"
        id: bake
      # Deploys application based on manifest files from previous step
      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/instantaneousgram-apigateway:latest
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/instantaneousgram-authentication:latest
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/instantaneousgram-contentmanagement:latest
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/instantaneousgram-likeandcomment:latest
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/instantaneousgram-imageprocessing:latest
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/instantaneousgram-userprofile:latest
