apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: instantaneousgram
spec:
  serviceName: "rabbitmq-clusterip"
  replicas: 2
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management-alpine
        ports:
        - containerPort: 5672
        - containerPort: 15672
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        - name: rabbitmq-log
          mountPath: /var/log/rabbitmq
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-auth0-credentials
              key: rabbitmq-username
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-auth0-credentials
              key: rabbitmq-password
        livenessProbe:
          exec:
            command: ["rabbitmqctl", "status"]
          initialDelaySeconds: 120
          timeoutSeconds: 10
          periodSeconds: 30
          failureThreshold: 6
        readinessProbe:
          exec:
            command: ["rabbitmqctl", "status"]
          initialDelaySeconds: 120
          timeoutSeconds: 10
          periodSeconds: 30
          failureThreshold: 6
      volumes:
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-data
      - name: rabbitmq-log
        persistentVolumeClaim:
          claimName: rabbitmq-log

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-clusterip
  namespace: instantaneousgram
spec:
  type: ClusterIP
  selector:
    app: rabbitmq
  ports:
  - name: amqp
    protocol: TCP
    port: 5672
    targetPort: 5672
  - name: management
    protocol: TCP
    port: 15672
    targetPort: 15672
